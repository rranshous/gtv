#!/usr/bin/env ruby

require 'sinatra'
require 'json'

DAYS_OF_WEEK = %w{monday tuesday wednesday thursday friday saturday sunday}

set :port, 80
set :lock, true
set :bind, '0.0.0.0'

helpers do
  def show_details_from_params
    sort_details(
      params
        .group_by{ |k,v| k.split('_').first }
        .map{ |_, fields| Hash[fields.map{ |n, v| [ n.split('_',2).last, v ] } ] }
        .reject{ |d| d.values.include? "NOTHING" }
    )
  end

  def sort_details details
    details
      .sort_by{ |d| d['start_time'] }
      .sort_by{ |d| d['channel'] }
      .sort_by{ |d| DAYS_OF_WEEK.index d['day_of_week'] }
  end

  def write_show_details details
    File.open('./show_details.jsonl', 'w') do |fh|
      details.each do |d|
        fh.puts d.to_json
      end
    end
  end

  def add_show time, channel, length
    show = { day_of_week: time.strftime('%A').downcase,
             start_time: time.strftime('%H:%M'),
             channel: channel,
             length: length }
    puts "adding show: #{show}"
    File.open('./show_details.jsonl', 'a') do |fh|
      fh.write("\n#{show.to_json}")
    end
  end

  def read_show_details
    File.read('./show_details.jsonl').split("\n").map{ |l| JSON.load l }.compact
  rescue Errno::ENOENT
    []
  end

  def get_channels
    `channels`.split("\n").map(&:chomp).sort
  end
end

get '/' do
  @show_details = read_show_details
  @channels = get_channels
  @possible_days_of_week = DAYS_OF_WEEK
  @possible_start_times = 0.upto(23).flat_map do |h|
    h = h.to_s.rjust(2,'0')
    ["#{h}:00", "#{h}:30"]
  end
  @possible_lengths = [30, 60, 75, 120].map(&:to_s)
  erb :"index.html"
end

post '/update_schedule' do
  content_type :text
  write_show_details show_details_from_params
  show_details_from_params
    .map{ |d| "on #{d['day_of_week']} watch #{d['channel']} @ #{d['start_time']} for #{d['length']}m" }
    .join("\n")
end

post '/play_channel' do
  add_show Time.now + 60, params['channel'], params['length'].to_i
  "done"
end
